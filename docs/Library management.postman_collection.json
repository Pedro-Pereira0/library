{
	"info": {
		"_postman_id": "83810b12-c0cf-4a9d-8548-a11ced952254",
		"name": "Library management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23471733",
		"_collection_link": "https://grey-firefly-323021.postman.co/workspace/PSOFT-Proj~4ab72bbe-78e5-4a94-a396-fb8639acfe29/collection/23539054-83810b12-c0cf-4a9d-8548-a11ced952254?action=share&source=collection_link&creator=23471733"
	},
	"item": [
		{
			"name": "Lending management",
			"item": [
				{
					"name": "WP4A",
					"item": [
						{
							"name": "US15 (requires librarian auth)",
							"item": [
								{
									"name": "lend a book (Overdue lendings)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Overdue lending\", function(){",
													"",
													"    pm.response.to.have.status(409);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isbn\": \"978-4-0531-7568-7\",\n    \"readerNumber\": \"2024/1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											]
										}
									},
									"response": []
								},
								{
									"name": "lend a book (ISBN does not exist)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book not available\", function(){",
													"",
													"    pm.response.to.have.status(404);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isbn\": \"Albertina\",\n    \"readerNumber\": \"2024/3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											]
										}
									},
									"response": []
								},
								{
									"name": "lend a book (Reader does not exist)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Reader not found\", function(){",
													"",
													"    pm.response.to.have.status(404);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isbn\": \"978-989-8853-31-9\",\n    \"readerNumber\": \"2024/20\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											]
										}
									},
									"response": []
								},
								{
									"name": "lend a book (Book is not available)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book lent\", function(){",
													"",
													"    pm.response.to.have.status(409);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isbn\": \"978-989-8853-31-8\",\n    \"readerNumber\": \"2024/4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											]
										}
									},
									"response": []
								},
								{
									"name": "lend a book",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book lent\", function(){",
													"",
													"    pm.response.to.have.status(201);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isbn\": \"978-8-6180-7114-8\",\n    \"readerNumber\": \"2024/6\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US16 (requires reader auth)",
							"item": [
								{
									"name": "return a book (no comment with lending Number)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book returned\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"  ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/1",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "return a book (comment with lending Number)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book returned\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"  ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"5 estrelas\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/2",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "return a book (no comment with ISBN- 2024/05)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book returned\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"  ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/978-989-23-3583-4",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"978-989-23-3583-4"
											]
										}
									},
									"response": []
								},
								{
									"name": "return a book (comment with ISBN- 2024/05)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Book returned\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"  ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"5 estrelas\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/978-989-666-352-0",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"978-989-666-352-0"
											]
										}
									},
									"response": []
								},
								{
									"name": "return a book (book's ISBN not found)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"\", function(){",
													"",
													"    pm.response.to.have.status(404);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"5 estrelas\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/978-972-0-54321-53",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"978-972-0-54321-53"
											]
										}
									},
									"response": []
								},
								{
									"name": "return a book (Lending Number not found)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"\", function(){",
													"",
													"    pm.response.to.have.status(404);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"5 estrelas\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/55",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"55"
											]
										}
									},
									"response": []
								},
								{
									"name": "return",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"\", function(){",
													"",
													"    pm.response.to.have.status(404);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"5 estrelas\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/1",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US17 (both)",
							"item": [
								{
									"name": "details (lending 2024/1 as reader 2024/1)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/1",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "details (lending 2024/3 as reader 2024/4)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/978-6-2219-9414-4",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"978-6-2219-9414-4"
											]
										}
									},
									"response": []
								},
								{
									"name": "details (lending 2024/1 as librarian)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/1",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "details (lending 2024/2 as librarian)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/2",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "details (lending 2024/3 as librarian)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/3",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "details (lending not found as librarian)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(404);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/978-989-8853-31-13",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"978-989-8853-31-13"
											]
										}
									},
									"response": []
								},
								{
									"name": "details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Details\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    var lendingId = responseBody.lendingId;",
													"    pm.environment.set(\"lendingId\", lendingId);   ",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/2024/6",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"2024",
												"6"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "WP4B",
					"item": [
						{
							"name": "US23 (requires librarian auth)",
							"item": [
								{
									"name": "lendings sort by tardiness",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending?active=true&sort=tardiness",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											],
											"query": [
												{
													"key": "active",
													"value": "true"
												},
												{
													"key": "sort",
													"value": "tardiness"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "lendings sort by tardiness with page",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending?active=true&sort=tardiness&page=1&size=1",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											],
											"query": [
												{
													"key": "active",
													"value": "true"
												},
												{
													"key": "sort",
													"value": "tardiness"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "wrong request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(400);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending?active=true&sort=something",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											],
											"query": [
												{
													"key": "active",
													"value": "true"
												},
												{
													"key": "sort",
													"value": "something"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "one parameter",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending?sort=tardiness",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending"
											],
											"query": [
												{
													"key": "sort",
													"value": "tardiness"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US14 (requires librarian auth)",
							"item": [
								{
									"name": "average amount per day",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/average-amount-per-day?year=2024&month=5&groupby=genre",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"average-amount-per-day"
											],
											"query": [
												{
													"key": "year",
													"value": "2024"
												},
												{
													"key": "month",
													"value": "5"
												},
												{
													"key": "groupby",
													"value": "genre"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "average amount per day (wrong groupBy)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(400);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/average-amount-per-day?year=2024&month=5&groupby=khvk",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"average-amount-per-day"
											],
											"query": [
												{
													"key": "year",
													"value": "2024"
												},
												{
													"key": "month",
													"value": "5"
												},
												{
													"key": "groupby",
													"value": "khvk"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "average amount per day (null groupBy)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(400);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/average-amount-per-day?year=2024&month=5&groupby",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"average-amount-per-day"
											],
											"query": [
												{
													"key": "year",
													"value": "2024"
												},
												{
													"key": "month",
													"value": "5"
												},
												{
													"key": "groupby",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "average amount per day (wrong parameters)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(400);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/average-amount-per-day?year=20upby",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"average-amount-per-day"
											],
											"query": [
												{
													"key": "year",
													"value": "20upby"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US15",
							"item": [
								{
									"name": "average lending duration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"getLendings\", function(){",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/lending/average-duration",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"lending",
												"average-duration"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "all (data test)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{readerToken}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/lending",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"lending"
							]
						}
					},
					"response": []
				},
				{
					"name": "all with page number",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{readerToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/lending?page=3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"lending"
							],
							"query": [
								{
									"key": "page",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all with page number and size",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{readerToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/lending?page=1&size=2",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"lending"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reader management",
			"item": [
				{
					"name": "WP3A",
					"item": [
						{
							"name": "US11",
							"item": [
								{
									"name": "registerReader",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Created\", function(){ \r",
													"    pm.response.to.have.status(201); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"28/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (Invalid username)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad Request: Not in email format.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"josePinho\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"28/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (username already exists)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Conflict: registing a reader with an already used username.\", function(){ \r",
													"    pm.response.to.have.status(409); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"mary1@mail.com\",\n    \"name\": \"Jose2\",\n    \"dateOfBirth\": \"28/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (Invalid name)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Using special characters in the name.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jose1@email.com",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Jose",
													"type": "text"
												},
												{
													"key": "dateOfBirth",
													"value": "28/03/2002",
													"type": "text"
												},
												{
													"key": "phoneNumber",
													"value": "912345678",
													"type": "text"
												},
												{
													"key": "gdprConsent",
													"value": "yes",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Pass1!!!",
													"type": "text"
												},
												{
													"key": "rePassword",
													"value": "Pass1!!!",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (Blank name)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Only spaces name.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose2@email.com\",\n    \"name\": \" \",\n    \"dateOfBirth\": \"28/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (Invalid Date of birth)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Non existing date.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose3@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"92/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (Invalid Date of birth 2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Wrong format date.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose4@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"2002/03/20\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid Phone number)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Letter in the phone number.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose5@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"91234567a\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid Phone number 2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: exceeding the digits limit.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose6@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"9123456789\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid Phone number 3)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Special characters in the phone number\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose7@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"91234567!\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid gdpr consent \"No\")",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Reader must accept the gdpr consent.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose8@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"no\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid gdpr consent ) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: The confirmation must be in english.(Yes)\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose9@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"Sim\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid password)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Password must have at least 8 characters.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose10@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!\",\n    \"rePassword\": \"Pass1!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid password 2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Password must contain at least one capital letter.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose11@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"pass1!!!\",\n    \"rePassword\": \"pass1!!!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (invalid password 3)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: Password must contain a number or a special character.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose12@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Passwordf\",\n    \"rePassword\": \"Passwordf\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (passwords dont match)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Bad request: The password must match.\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"jose13@email.com\",\n    \"name\": \"Jose\",\n    \"dateOfBirth\": \"02/03/2002\",\n    \"phoneNumber\": \"912345678\",\n    \"gdprConsent\": \"yes\",\n    \"password\": \"Pass1!!!\",\n    \"rePassword\": \"Pass1!!?\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US12",
							"item": [
								{
									"name": "updateReader",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Mary Gomes\",\r\n    \"dateOfBirth\": \"26/03/2002\",\r\n    \"phoneNumber\": \"912345678\",\r\n    \"gdprConsent\": \"yes\",\r\n    \"password\":\"Pass2!!!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/updateReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"updateReader"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateReader (new)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jose2@email.com",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Jose",
													"type": "text"
												},
												{
													"key": "dateOfBirth",
													"value": "28/03/2002",
													"type": "text"
												},
												{
													"key": "phoneNumber",
													"value": "912345678",
													"type": "text"
												},
												{
													"key": "gdprConsent",
													"value": "yes",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Pass2!!!",
													"type": "text"
												},
												{
													"key": "interestList",
													"value": "Economia,\nMistério,\nRomance",
													"type": "text"
												},
												{
													"key": "pfp",
													"type": "file",
													"src": "postman-cloud:///1ef233f0-56c2-4520-9064-abc4b3e5235c"
												}
											]
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/updateReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"updateReader"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US13",
							"item": [
								{
									"name": "getReaderByReaderNumber",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/{{year}}/7/profile",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"{{year}}",
												"7",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "getReaderByReaderNumber(Not existing readerNumber)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Not Found: Reader number doesn't exist\", function(){ \r",
													"    pm.response.to.have.status(404); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/{{year}}/-90/profile",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"{{year}}",
												"-90",
												"profile"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "US14",
							"item": [
								{
									"name": "searchReaders(name)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"page\":{\r\n        \"number\":\"1\",\r\n        \"limit\":\"5\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/search?name=Mary",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"search"
											],
											"query": [
												{
													"key": "phoneNumber",
													"value": "123456789",
													"disabled": true
												},
												{
													"key": "name",
													"value": "Mary"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "searchReaders(name) Invalid name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"page\":{\r\n        \"number\":\"2\",\r\n        \"limit\":\"5\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/search?name=!",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"search"
											],
											"query": [
												{
													"key": "name",
													"value": "!"
												},
												{
													"key": "phoneNumber",
													"value": "123456789",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "WP3B",
					"item": [
						{
							"name": "11",
							"item": [
								{
									"name": "getTop5Readers",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/getTopReaders",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"getTopReaders"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "12",
							"item": [
								{
									"name": "registerReader (new)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Created\", function(){ \r",
													"    pm.response.to.have.status(201); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jose@email.com",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Jose",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "dateOfBirth",
													"value": "28/03/2002",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "phoneNumber",
													"value": "912345678",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "gdprConsent",
													"value": "yes",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Pass1!!!",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "rePassword",
													"value": "Pass1!!!",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "interestList",
													"value": "Economia,\nMistério,\nRomance",
													"type": "text"
												},
												{
													"key": "pfp",
													"type": "file",
													"src": "postman-cloud:///1ef21bf4-ee53-48d0-b5a7-35f66642c0d2"
												}
											]
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (new) invalid Genres",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid Genres\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jose2@email.com",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Jose",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "dateOfBirth",
													"value": "28/03/2002",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "phoneNumber",
													"value": "912345678",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "gdprConsent",
													"value": "yes",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Pass1!!!",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "rePassword",
													"value": "Pass1!!!",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "interestList",
													"value": "Economia,\nMitério,\nRomance",
													"type": "text"
												},
												{
													"key": "pfp",
													"type": "file",
													"src": "postman-cloud:///1ef21bf4-ee53-48d0-b5a7-35f66642c0d2"
												}
											]
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "registerReader (new) invalid Age",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid age\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "jose2@email.com",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Jose",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "dateOfBirth",
													"value": "28/03/2002",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "phoneNumber",
													"value": "912345678",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "gdprConsent",
													"value": "yes",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Pass1!!!",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "rePassword",
													"value": "Pass1!!!",
													"contentType": "application/json",
													"type": "text"
												},
												{
													"key": "interestList",
													"value": "Economia,\nMistério,\nRomance",
													"type": "text"
												},
												{
													"key": "pfp",
													"type": "file",
													"src": "postman-cloud:///1ef21bf4-ee53-48d0-b5a7-35f66642c0d2"
												}
											]
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/registerReader",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"registerReader"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getReadersProfilePicture",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/{{year}}/7/profilePicture",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"{{year}}",
												"7",
												"profilePicture"
											]
										}
									},
									"response": []
								},
								{
									"name": "getReadersProfilePicture (No photo)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(400); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{librarianToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/{{year}}/1/profilePicture",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"{{year}}",
												"1",
												"profilePicture"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "13",
							"item": [
								{
									"name": "getBookSuggestions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Ok\", function(){ \r",
													"    pm.response.to.have.status(200); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{readerToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"page\":{\r\n        \"number\":\"1\",\r\n        \"limit\":\"5\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{baseUrl}}/reader/getBookSuggestions",
											"host": [
												"{{host}}{{baseUrl}}"
											],
											"path": [
												"reader",
												"getBookSuggestions"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Lending tests",
					"item": [
						{
							"name": "reader 2024/1 login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authenticated\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"     let readerToken = postman.getResponseHeader(\"Authorization\");",
											"    pm.environment.set(\"readerToken\", readerToken);   ",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"mary1@mail.com\",\n    \"password\": \"myMy123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "reader 2024/2 login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authenticated\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"     let readerToken = postman.getResponseHeader(\"Authorization\");",
											"    pm.environment.set(\"readerToken\", readerToken);      ",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"mary2@mail.com\",\n    \"password\": \"myMy123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "reader 2024/3 login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authenticated\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"     let readerToken = postman.getResponseHeader(\"Authorization\");",
											"    pm.environment.set(\"readerToken\", readerToken);    ",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"mary3@mail.com\",\n    \"password\": \"myMy123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "reader 2024/4 login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authenticated\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"     let readerToken = postman.getResponseHeader(\"Authorization\");",
											"    pm.environment.set(\"readerToken\", readerToken);      ",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"mary4@mail.com\",\n    \"password\": \"myMy123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "reader 2024/5 login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authenticated\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"     let readerToken = postman.getResponseHeader(\"Authorization\");",
											"    pm.environment.set(\"readerToken\", readerToken);      ",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"mary5@mail.com\",\n    \"password\": \"myMy123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "librarian login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authenticated\", function(){",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    let librarianToken = pm.response.headers.get(\"Authorization\");",
									"    pm.environment.set(\"librarianToken\", librarianToken);    ",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"u1@mail.com\",\n    \"password\": \"Password1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "reader login (Mary)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates\", function(){",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    let readerToken = postman.getResponseHeader(\"Authorization\");",
									"    pm.environment.set(\"readerToken\", readerToken);   ",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"mary1@mail.com\",\n    \"password\": \"myMy123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "reader login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates\", function(){",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    let readerToken = postman.getResponseHeader(\"Authorization\");",
									"    pm.environment.set(\"readerToken\", readerToken);   ",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"jose@email.com\",\n    \"password\": \"Pass2!!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User management",
			"item": [
				{
					"name": "get a user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/admin/user/1",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"admin",
								"user",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Book management",
			"item": [
				{
					"name": "Public",
					"item": [
						{
							"name": "Get all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book?page=1&limit=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get by isbn",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get by isbn - cover",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/book/978-989-8853-31-8/cover",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"book",
										"978-989-8853-31-8",
										"cover"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get by isbn unexisting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not found\", function(){\r",
											"    pm.response.to.have.status(404);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/123",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"123"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book by title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?title=Con&page=1&limit=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "title",
											"value": "Con"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book by genre",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?genre=Economia&page=1&limit=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "genre",
											"value": "Economia"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book by title and genre",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?title=D&genre=Economia&page=1&limit=10",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "title",
											"value": "D"
										},
										{
											"key": "genre",
											"value": "Economia"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book - invalid query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad Request\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?abc=Economia",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "abc",
											"value": "Economia"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book by title - unexisting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not found\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?title=abc",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "title",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book by genre - unexisting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not found\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?genre=abc",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "genre",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search book by title and genre - unexisting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not found\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/search?title=C&genre=abc",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"search"
									],
									"query": [
										{
											"key": "title",
											"value": "C"
										},
										{
											"key": "genre",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Top 5 Books Lent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/topbooks",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"topbooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Top 5 Genres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"    pm.response.to.have.status(200); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/topgenres",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"topgenres"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Private",
					"item": [
						{
							"name": "Create new book with cover (jpeg)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Created\", function(){ \r",
											"    pm.response.to.have.status(201); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef210ee-6c9f-4a70-91d6-bdc7689681f4"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book with cover (png)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Created\", function(){ \r",
											"    pm.response.to.have.status(201); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef21121-2300-46c0-bd91-e61b83b54ff8"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - invalid format (bmp)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad Request\", function(){ \r",
											"    pm.response.to.have.status(400); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "author",
											"value": "{{randomAuthor}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef211c4-d1a3-49e0-8f21-065efff3390b"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - large cover",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad Request\", function(){ \r",
											"    pm.response.to.have.status(400); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "author",
											"value": "{{randomAuthor}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef2112f-e02a-4990-8a86-cb78893754eb"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book without cover",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Created\", function(){ \r",
											"    pm.response.to.have.status(201); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - invalid isbn",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad request\", function(){\r",
											"    pm.response.to.have.status(400); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/123",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"123"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - invalid title - too long",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad request\", function(){\r",
											"    pm.response.to.have.status(400); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremParagraphs}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - invalid title - whitespace",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad request\", function(){\r",
											"    pm.response.to.have.status(400); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": " {{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - unexisting genre",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not Found\", function(){\r",
											"    pm.response.to.have.status(404); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{$randomLoremWord}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new book - unexisting author",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not Found\", function(){\r",
											"    pm.response.to.have.status(404); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{$randomWord}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/{{randomBookIsbn}}",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"{{randomBookIsbn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace existing book - all fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef210ee-6c9f-4a70-91d6-bdc7689681f4"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace existing book - without cover",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace existing book - without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var genres = [\"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\"];\r",
											"var randomGenre = genres[Math.floor(Math.random() * genres.length)];\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var authors = [\"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \"Nicolau Maquiavel\"];\r",
											"var randomAuthor = authors[Math.floor(Math.random() * authors.length)];\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor);\r",
											"\r",
											"var coAuthors = [\"Anna Rosling Ronnlund\",\"Ola Rosling\",\"Isabel Ramos\",\"Gabriel García Márquez\",\"Charles Dickens\",\"Leo Tolstoy\",\"Mark Twain\",\"Paul Barry\",\"David Griffiths\",\"William Shakespeare\",\"Jane Austen\",\"Robert C. Martin\",\"Micah Martin\",\"DavidHansson\",\"Jason Fried\",\"Matthew Linderman\",\"Bob Woodward\",\"Carl Bernstein\",\"Larry Niven\",\"Jerry Pournelle\",\"Brandon Sanderson\",\"Janci Patterson\",\"John Scalzi\",\"Wil Wheaton\",\"Dan Ariely\",\"Jeff Kreisler\",\"Stephen R. Covey\",\"Rebecca R. Merrill\",\"Gary Keller\",\"Jay Papasan\",\"Doris Kearns Goodwin\",\"Michael Beschloss\",\"John Meacham\",\"Tim McGraw\"];\r",
											"var randomCoAuthor = coAuthors[Math.floor(Math.random() * coAuthors.length)];\r",
											"var randomCoAuthor2 = coAuthors[Math.floor(Math.random() * coAuthors.length)];\r",
											"pm.environment.set(\"randomCoAuthor\", randomCoAuthor);\r",
											"pm.environment.set(\"randomCoAuthor2\", randomCoAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef210ee-6c9f-4a70-91d6-bdc7689681f4"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace existing book - only title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad request\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace existing book - invalid etag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Conflict\", function(){\r",
											"    pm.response.to.have.status(409);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "-1"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing book - all fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var isbnList = [\r",
											"    '0-1863-1500-7', '0-9502-2364-6', '0-5733-9840-2', '0-7193-9959-9', '0-6280-7319-4', \r",
											"    '0-5753-1101-0', '978-9-3747-0446-2', '978-7-6896-2614-1', '978-2-5968-2131-3', '978-3-0763-1421-9', \r",
											"    '978-5-7884-0270-3', '978-5-7385-3628-1', '978-0-0006-1716-3', '978-7-9727-8012-3', '978-5-6269-2387-2', \r",
											"    '978-4-0063-6342-0', '978-5-4851-2033-7', '978-4-7300-7657-3', '978-4-4670-4172-1', '978-7-3163-0603-3', \r",
											"    '978-5-5303-9561-1', '978-2-2406-0514-6', '978-5-2153-1727-3', '978-0-5478-6335-1', '978-3-1491-6299-0', \r",
											"    '978-0-1602-9256-9'\r",
											"];\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomIsbn = getRandomItemFromList(isbnList);\r",
											"pm.environment.set(\"randomBookIsbn\", randomIsbn);\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										},
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										},
										{
											"key": "authors",
											"value": "{{randomAuthor}}",
											"type": "text"
										},
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef21121-2300-46c0-bd91-e61b83b54ff8"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing book - just title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "{{$randomLoremWords}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing book - just description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "{{$randomLoremSentence}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing book - just genre",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var genres = [\r",
											"    \"Autoajuda\", \"Aventura\", \"Biografia\", \"Ciência\", \"Comédia\", \"Drama\", \"Economia\", \"Ficção Científica\", \"Mistério\", \r",
											"    \"Romance\", \"Sociologia\", \"Fantasia\", \"Horror\", \"História\", \"Infantil\", \"Poesia\", \"Religião\", \"Suspense\", \"Terror\", \r",
											"    \"Thriller\", \"Distopia\", \"Épico\", \"Policial\", \"Tecnologia\", \"Ensaios\", \"Literatura Clássica\", \"Psicologia\", \"Filosofia\", \r",
											"    \"Educação\", \"Culinária\", \"Desporto\", \"Viajem\", \"Medicina\", \"Natureza\", \"Arte\", \"Arquitetura\", \"Fotografia\", \"Cinema\", \r",
											"    \"Música\", \"Teatro\", \"Dança\", \"Auto-biografia\", \"Diários\", \"Memórias\", \"Guia de Viagens\", \"Computação\", \"Engenharia\", \r",
											"    \"Matemática\", \"Física\", \"Química\", \"Biologia\", \"Astronomia\", \"Geografia\", \"Direito\", \"Negócios\", \"Marketing\", \r",
											"    \"Publicidade\", \"Administração\", \"Contabilidade\", \"Finanças\", \"Design\", \"Moda\", \"Cultura Pop\", \"Antropologia\", \r",
											"    \"Política\", \"História Militar\", \"Mitologia\", \"Lendas\", \"Genealogia\", \"Saúde\", \"Bem-Estar\"\r",
											"];\r",
											"\r",
											"var randomGenre = getRandomItemFromList(genres);\r",
											"pm.environment.set(\"randomGenre\", randomGenre);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "genre",
											"value": "{{randomGenre}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing book - just authors",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomItemFromList(list) {\r",
											"    var randomIndex = Math.floor(Math.random() * list.length);\r",
											"    return list[randomIndex];\r",
											"}\r",
											"\r",
											"var authors = [\r",
											"    \"António Vilaça Pacheco\", \"Pedro Andersson\", \"Joanne Harris\", \"Hans Rosling\", \"José Saramago\", \"Gabriel García Márquez\", \r",
											"    \"Nicolau Maquiavel\", \"Anna Rosling Ronnlund\", \"Ola Rosling\", \"Isabel Ramos\", \"Gabriel García Márquez\", \"Charles Dickens\", \r",
											"    \"Leo Tolstoy\", \"Mark Twain\", \"Paul Barry\", \"David Griffiths\", \"William Shakespeare\", \"Jane Austen\", \"Robert C. Martin\", \r",
											"    \"Micah Martin\", \"David Hansson\", \"Jason Fried\", \"Matthew Linderman\", \"Bob Woodward\", \"Carl Bernstein\", \"Larry Niven\", \r",
											"    \"Jerry Pournelle\", \"Brandon Sanderson\", \"Janci Patterson\", \"John Scalzi\", \"Wil Wheaton\", \"Dan Ariely\", \"Jeff Kreisler\", \r",
											"    \"Stephen R. Covey\", \"Rebecca R. Merrill\", \"Gary Keller\", \"Jay Papasan\", \"Doris Kearns Goodwin\", \"Michael Beschloss\", \r",
											"    \"John Meacham\", \"Tim McGraw\"\r",
											"];\r",
											"\r",
											"var randomAuthor1 = getRandomItemFromList(authors);\r",
											"var randomAuthor2;\r",
											"do {\r",
											"    randomAuthor2 = getRandomItemFromList(authors);\r",
											"} while (randomAuthor1 === randomAuthor2);\r",
											"\r",
											"pm.environment.set(\"randomAuthor\", randomAuthor1);\r",
											"pm.environment.set(\"randomAuthor2\", randomAuthor2);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "authors",
											"value": "{{randomAuthor}},{{randomAuthor2}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing book - just cover",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ok\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let book1etag = pm.response.headers.get(\"ETag\");\r",
											"    pm.environment.set(\"book1etag\", book1etag);    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{librarianToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{book1etag}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "cover",
											"type": "file",
											"src": "postman-cloud:///1ef21121-2300-46c0-bd91-e61b83b54ff8"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/book/978-989-8853-31-8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"book",
										"978-989-8853-31-8"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Reporting",
			"item": [
				{
					"name": "US19",
					"item": [
						{
							"name": "averageDurationPerGenrePerMonth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"getLendings\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{readerToken}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{librarianToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/lending/average-duration?startdate=2024-01-01&enddate=2024-12-31&groupby=month,genre",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"lending",
										"average-duration"
									],
									"query": [
										{
											"key": "startdate",
											"value": "2024-01-01"
										},
										{
											"key": "enddate",
											"value": "2024-12-31"
										},
										{
											"key": "groupby",
											"value": "month,genre"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "averageDurationPerGenrePerMonth (Bad request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"getLendings\", function(){",
											"",
											"    pm.response.to.have.status(400);",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{readerToken}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{librarianToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/lending/average-duration?startdate=2024-01-01&enddate=2024-12-31&groupby=month",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"lending",
										"average-duration"
									],
									"query": [
										{
											"key": "startdate",
											"value": "2024-01-01"
										},
										{
											"key": "enddate",
											"value": "2024-12-31"
										},
										{
											"key": "groupby",
											"value": "month"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Number of lendings per month broken down by genre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ok\", function(){\r",
									"    pm.response.to.have.status(200); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{librarianToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/lending/report",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"lending",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "MonthlyLendingPerReader",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ok\", function(){ \r",
									"    pm.response.to.have.status(200); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"page\":{\r\n        \"number\":\"3\",\r\n        \"limit\":\"2\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/lending/getMonthlyLendingPerReader?startDate=2002-02-02&endDate=2024-04-30",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"lending",
								"getMonthlyLendingPerReader"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2002-02-02"
								},
								{
									"key": "endDate",
									"value": "2024-04-30"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bonus",
			"item": [
				{
					"name": "US30",
					"item": [
						{
							"name": "averageDurationPerBook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"getLendings\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{readerToken}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{librarianToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/lending/average-duration?groupby=book",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"lending",
										"average-duration"
									],
									"query": [
										{
											"key": "groupby",
											"value": "book"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "averageDurationPerBook with page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"getLendings\", function(){",
											"",
											"    pm.response.to.have.status(200);",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{readerToken}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{librarianToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/lending/average-duration?groupby=book&size=2&page=1",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"lending",
										"average-duration"
									],
									"query": [
										{
											"key": "groupby",
											"value": "book"
										},
										{
											"key": "size",
											"value": "2"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "averageDurationPerBook (Empty groupBy)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"getLendings\", function(){",
											"",
											"    pm.response.to.have.status(400);",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{readerToken}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{librarianToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/lending/average-duration?groupby=",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"lending",
										"average-duration"
									],
									"query": [
										{
											"key": "groupby",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "averageDurationPerBook (wrong groupBy)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"getLendings\", function(){",
											"",
											"    pm.response.to.have.status(400);",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{readerToken}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{librarianToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/lending/average-duration?groupby=month",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"lending",
										"average-duration"
									],
									"query": [
										{
											"key": "groupby",
											"value": "month"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search book by author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ok\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/book/search?author=Pedro&page=1&limit=10",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"book",
								"search"
							],
							"query": [
								{
									"key": "author",
									"value": "Pedro"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search book by author - unexisting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Not found\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/book/search?author=abc&page=1&limit=10",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"book",
								"search"
							],
							"query": [
								{
									"key": "author",
									"value": "abc"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "searchReaders(phoneNumber)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ok\", function(){ \r",
									"    pm.response.to.have.status(200); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"page\":{\r\n        \"number\":\"1\",\r\n        \"limit\":\"5\"\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/reader/search?phoneNumber=123456789",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"reader",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "Mary",
									"disabled": true
								},
								{
									"key": "phoneNumber",
									"value": "123456789"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "searchReaders(phoneNumber) Invalid phoneNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid phone number\", function(){ \r",
									"    pm.response.to.have.status(400); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"page\":{\r\n        \"number\":\"1\",\r\n        \"limit\":\"5\"\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/reader/search?phoneNumber=12345678",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"reader",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "Mary",
									"disabled": true
								},
								{
									"key": "phoneNumber",
									"value": "12345678"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "searchReaders(phoneNumber) Invalid (2 attributes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid phone number\", function(){ \r",
									"    pm.response.to.have.status(400); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"page\":{\r\n        \"number\":\"1\",\r\n        \"limit\":\"5\"\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/reader/search?phoneNumber=12345678",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"reader",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "Mary",
									"disabled": true
								},
								{
									"key": "phoneNumber",
									"value": "12345678"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}